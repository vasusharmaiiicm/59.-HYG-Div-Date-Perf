2025-09-09 14:31:11.548649+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-09 14:31:11.548649+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-09 14:31:11.548648+0000 UTC'
2025-09-09 14:31:11.565991+0000 UTC [DEBUG] pydataquery: Created a job of 15 expression(s)
2025-09-09 14:31:11.565991+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11'
2025-09-09 14:31:11.565991+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 13.0 years.
2025-09-09 14:31:11.565991+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-09 14:31:11.565991+0000 UTC [INFO] pydataquery: Execution started
2025-09-09 14:31:11.572963+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 15 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2012-09-11', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-09 14:31:11.572963+0000 UTC [INFO] pydataquery: Prepared 7 API requests for 15 expressions of 13 year(s) 0 day(s): start_date=20120911, end_date=20250908
2025-09-09 14:31:11.572963+0000 UTC [INFO] pydataquery: Sending 1/7 API request
2025-09-09 14:31:11.574967+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20230909&end-date=20250908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:11.574967+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-09 14:31:12.143138+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.56 seconds. The token expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:12.146153+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:13.600875+0000 UTC [INFO] pydataquery: Received API response in 1.256162 seconds with response code 200
2025-09-09 14:31:13.604812+0000 UTC [INFO] pydataquery: Sending 2/7 API request
2025-09-09 14:31:13.605771+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20210909&end-date=20230908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:13.605771+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:15.350862+0000 UTC [INFO] pydataquery: Received API response in 1.553328 seconds with response code 200
2025-09-09 14:31:15.358457+0000 UTC [INFO] pydataquery: Sending 3/7 API request
2025-09-09 14:31:15.359151+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20190909&end-date=20210908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:15.359765+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:17.097295+0000 UTC [INFO] pydataquery: Received API response in 1.51423 seconds with response code 200
2025-09-09 14:31:17.112942+0000 UTC [INFO] pydataquery: Sending 4/7 API request
2025-09-09 14:31:17.112942+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20170909&end-date=20190908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:17.112942+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:18.260372+0000 UTC [INFO] pydataquery: Received API response in 1.015145 seconds with response code 200
2025-09-09 14:31:18.260372+0000 UTC [INFO] pydataquery: Sending 5/7 API request
2025-09-09 14:31:18.260372+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20150909&end-date=20170908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:18.260372+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:19.337440+0000 UTC [INFO] pydataquery: Received API response in 1.003797 seconds with response code 200
2025-09-09 14:31:19.637307+0000 UTC [INFO] pydataquery: Sending 6/7 API request
2025-09-09 14:31:19.638312+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20130909&end-date=20150908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:19.638312+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:21.096877+0000 UTC [INFO] pydataquery: Received API response in 1.256276 seconds with response code 200
2025-09-09 14:31:21.159440+0000 UTC [INFO] pydataquery: Sending 7/7 API request
2025-09-09 14:31:21.159440+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20120911&end-date=20130908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:31:21.159440+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:31:11+0000 UTC
2025-09-09 14:31:22.783323+0000 UTC [INFO] pydataquery: Received API response in 1.484174 seconds with response code 200
2025-09-09 14:31:22.790966+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-09 14:31:22.790966+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-09 14:31:22.857470+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-09 14:31:23.260709+0000 UTC [INFO] pydataquery: Retrieved data successfully for 15 expression(s)
2025-09-09 14:31:23.262711+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-09 14:31:23.268298+0000 UTC [INFO] pydataquery: Execution completed
2025-09-09 14:31:23.268298+0000 UTC [INFO] pydataquery: Pre-processing: converting 15 expression(s) of 4,745 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2012-09-11' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-09 14:32:14.473612+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-09 14:32:14.473612+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-09 14:32:14.473612+0000 UTC'
2025-09-09 14:32:14.473612+0000 UTC [DEBUG] pydataquery: Created a job of 15 expression(s)
2025-09-09 14:32:14.473612+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11'
2025-09-09 14:32:14.473612+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 13.0 years.
2025-09-09 14:32:14.473612+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-09 14:32:14.473612+0000 UTC [INFO] pydataquery: Execution started
2025-09-09 14:32:14.473612+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 15 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2012-09-11', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-09 14:32:14.488126+0000 UTC [INFO] pydataquery: Prepared 7 API requests for 15 expressions of 13 year(s) 0 day(s): start_date=20120911, end_date=20250908
2025-09-09 14:32:14.488126+0000 UTC [INFO] pydataquery: Sending 1/7 API request
2025-09-09 14:32:14.488126+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20230909&end-date=20250908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:14.488126+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-09 14:32:15.407688+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.91 seconds. The token expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:15.410946+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:16.768106+0000 UTC [INFO] pydataquery: Received API response in 1.224984 seconds with response code 200
2025-09-09 14:32:16.770105+0000 UTC [INFO] pydataquery: Sending 2/7 API request
2025-09-09 14:32:16.771105+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20210909&end-date=20230908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:16.772105+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:19.395049+0000 UTC [INFO] pydataquery: Received API response in 2.163958 seconds with response code 200
2025-09-09 14:32:19.404615+0000 UTC [INFO] pydataquery: Sending 3/7 API request
2025-09-09 14:32:19.405814+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20190909&end-date=20210908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:19.407078+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:21.412826+0000 UTC [INFO] pydataquery: Received API response in 1.608651 seconds with response code 200
2025-09-09 14:32:21.419439+0000 UTC [INFO] pydataquery: Sending 4/7 API request
2025-09-09 14:32:21.421059+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20170909&end-date=20190908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:21.421059+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:24.276484+0000 UTC [INFO] pydataquery: Received API response in 2.455825 seconds with response code 200
2025-09-09 14:32:24.282810+0000 UTC [INFO] pydataquery: Sending 5/7 API request
2025-09-09 14:32:24.283940+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20150909&end-date=20170908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:24.284969+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:26.362303+0000 UTC [INFO] pydataquery: Received API response in 1.616773 seconds with response code 200
2025-09-09 14:32:26.362303+0000 UTC [INFO] pydataquery: Sending 6/7 API request
2025-09-09 14:32:26.362303+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20130909&end-date=20150908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:26.362303+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:28.866875+0000 UTC [INFO] pydataquery: Received API response in 2.165237 seconds with response code 200
2025-09-09 14:32:28.869875+0000 UTC [INFO] pydataquery: Sending 7/7 API request
2025-09-09 14:32:28.870875+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20120911&end-date=20130908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 14:32:28.871875+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 16:32:14+0000 UTC
2025-09-09 14:32:31.020830+0000 UTC [INFO] pydataquery: Received API response in 1.892085 seconds with response code 200
2025-09-09 14:32:31.032801+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-09 14:32:31.034688+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-09 14:32:31.080899+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-09 14:32:31.111615+0000 UTC [INFO] pydataquery: Retrieved data successfully for 15 expression(s)
2025-09-09 14:32:31.113333+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-09 14:32:31.115932+0000 UTC [INFO] pydataquery: Execution completed
2025-09-09 14:32:31.121950+0000 UTC [INFO] pydataquery: Pre-processing: converting 15 expression(s) of 4,745 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2012-09-11' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-09 15:42:11.848499+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-09 15:42:11.849836+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-09 15:42:11.849835+0000 UTC'
2025-09-09 15:42:11.849836+0000 UTC [DEBUG] pydataquery: Created a job of 15 expression(s)
2025-09-09 15:42:11.853524+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11'
2025-09-09 15:42:11.853524+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 13.0 years.
2025-09-09 15:42:11.855559+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2012-09-11' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-09 15:42:11.855559+0000 UTC [INFO] pydataquery: Execution started
2025-09-09 15:42:11.856801+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 15 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2012-09-11', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-09 15:42:11.856801+0000 UTC [INFO] pydataquery: Prepared 7 API requests for 15 expressions of 13 year(s) 0 day(s): start_date=20120911, end_date=20250908
2025-09-09 15:42:11.856801+0000 UTC [INFO] pydataquery: Sending 1/7 API request
2025-09-09 15:42:11.856801+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20230909&end-date=20250908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:11.860107+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-09 15:42:12.530589+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.67 seconds. The token expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:12.532427+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:13.805116+0000 UTC [INFO] pydataquery: Received API response in 1.122334 seconds with response code 200
2025-09-09 15:42:13.808112+0000 UTC [INFO] pydataquery: Sending 2/7 API request
2025-09-09 15:42:13.809113+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20210909&end-date=20230908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:13.809113+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:15.577451+0000 UTC [INFO] pydataquery: Received API response in 1.569665 seconds with response code 200
2025-09-09 15:42:15.582634+0000 UTC [INFO] pydataquery: Sending 3/7 API request
2025-09-09 15:42:15.583960+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20190909&end-date=20210908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:15.584487+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:17.145943+0000 UTC [INFO] pydataquery: Received API response in 1.299125 seconds with response code 200
2025-09-09 15:42:17.145943+0000 UTC [INFO] pydataquery: Sending 4/7 API request
2025-09-09 15:42:17.145943+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20170909&end-date=20190908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:17.145943+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:18.881848+0000 UTC [INFO] pydataquery: Received API response in 1.502292 seconds with response code 200
2025-09-09 15:42:18.896418+0000 UTC [INFO] pydataquery: Sending 5/7 API request
2025-09-09 15:42:18.896418+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20150909&end-date=20170908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:18.896418+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:20.691640+0000 UTC [INFO] pydataquery: Received API response in 1.531893 seconds with response code 200
2025-09-09 15:42:20.708182+0000 UTC [INFO] pydataquery: Sending 6/7 API request
2025-09-09 15:42:20.709357+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20130909&end-date=20150908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:20.709357+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:22.207345+0000 UTC [INFO] pydataquery: Received API response in 1.271097 seconds with response code 200
2025-09-09 15:42:22.215301+0000 UTC [INFO] pydataquery: Sending 7/7 API request
2025-09-09 15:42:22.216300+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDLIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_USDHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURIG_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=DB%28CDS%2CTRAC-X%2CEUROPEIBXTRS_EURHY_3M%2CJPM_IMPLIEDFUNDING_MID%29&expressions=FF&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAMERI100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF05ONRUN%2CJPM_RETURN%29&expressions=DB%28CDS%2CTRAC-X%2CNAHY100UNF10ONRUN%2CJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2FcdxEM-onrun%2F5y%2FJPM_RETURN%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx-onrun%2F10y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_crossover-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_senfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&expressions=DB%28NEO-UK%2Ccredit%2Fcds%2Findex%2Fitraxx_subfin-onrun%2F5y%2FJPM_UNFUNDED_INDEX%29&start-date=20120911&end-date=20130908&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-09 15:42:22.216300+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-09 17:42:11+0000 UTC
2025-09-09 15:42:24.459186+0000 UTC [INFO] pydataquery: Received API response in 2.112639 seconds with response code 200
2025-09-09 15:42:24.645824+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-09 15:42:24.645824+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-09 15:42:24.703104+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-09 15:42:24.733544+0000 UTC [INFO] pydataquery: Retrieved data successfully for 15 expression(s)
2025-09-09 15:42:24.734978+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-09 15:42:24.739265+0000 UTC [INFO] pydataquery: Execution completed
2025-09-09 15:42:24.740822+0000 UTC [INFO] pydataquery: Pre-processing: converting 15 expression(s) of 4,745 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2012-09-11' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 15:58:49.200097+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 15:58:49.203970+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 15:58:49.203969+0000 UTC'
2025-09-30 15:58:49.204473+0000 UTC [DEBUG] pydataquery: Created a job of 375 expression(s)
2025-09-30 15:58:49.211574+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2024-09-29'. Date range: 365 day(s).
2025-09-30 15:58:49.211574+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2024-09-29' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 15:58:49.211574+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 15:58:49.211574+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 375 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2024-09-29', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 15:58:49.219579+0000 UTC [INFO] pydataquery: Prepared 19 API requests for 375 expressions of 1 year(s) 0 day(s): start_date=20240929, end_date=20250929
2025-09-30 15:58:49.219579+0000 UTC [INFO] pydataquery: Sending 1/19 API request
2025-09-30 15:58:49.219579+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214237807%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239506%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214238441%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239175%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HX11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HS26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HT09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HU71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HV54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HW38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910826996%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717011982%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384698994%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2445169985%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972511%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910827887%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948511949%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1566179039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384701020%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948512913%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:58:49.219579+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 15:58:50.140640+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.91 seconds. The token expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:58:50.140640+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:58:55.280199+0000 UTC [INFO] pydataquery: Received API response in 4.999199 seconds with response code 200
2025-09-30 15:58:55.280199+0000 UTC [INFO] pydataquery: Sending 2/19 API request
2025-09-30 15:58:55.280199+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717013095%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910828182%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384704800%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435840%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710543%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2764839945%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2354781614%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710626%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1318576086%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680288%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302419%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2446175577%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680528%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302500%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790104530%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1619155564%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2333676133%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790134362%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:58:55.280199+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:58:56.547864+0000 UTC [INFO] pydataquery: Received API response in 1.124944 seconds with response code 200
2025-09-30 15:58:56.559974+0000 UTC [INFO] pydataquery: Sending 3/19 API request
2025-09-30 15:58:56.560442+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012BX31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CF16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0146173371%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AN67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AR71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CA29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CC84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CH71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297220423%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903488572%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078736%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391394348%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775618439%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1504948776%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057061%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903489463%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297226545%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079842642%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176897754%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391395154%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:58:56.560442+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:02.344414+0000 UTC [INFO] pydataquery: Received API response in 5.637457 seconds with response code 200
2025-09-30 15:59:02.357221+0000 UTC [INFO] pydataquery: Sending 4/19 API request
2025-09-30 15:59:02.360001+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0505478684%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078496%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775617464%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057491%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176899701%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391398174%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079846635%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297221405%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDH20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBW15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCB68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDB59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCG55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCK67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCP54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDL32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDC33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDE98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71643VAB18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDP46%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:02.360001+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:07.725968+0000 UTC [INFO] pydataquery: Received API response in 5.158941 seconds with response code 200
2025-09-30 15:59:07.736811+0000 UTC [INFO] pydataquery: Sending 5/19 API request
2025-09-30 15:59:07.739095+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS706451BG56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QAZ54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBR20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCC42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCL41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDD16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDF63%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71656MAF68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAA54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAB38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSG2583XAB76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AL44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AJ97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AK60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319398%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1729875598%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2419405274%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319638%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322321964%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2965710598%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:07.739095+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:09.567070+0000 UTC [INFO] pydataquery: Received API response in 1.421263 seconds with response code 200
2025-09-30 15:59:09.583595+0000 UTC [INFO] pydataquery: Sending 6/19 API request
2025-09-30 15:59:09.583595+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2990500766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2989586941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS3010561762%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AB83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AD40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AH53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AG70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AJ10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSU1065PAA94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AE23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAS80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAY58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBH17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBK46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBL29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAQ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAS08%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAK54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBJ72%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAN93%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:09.583595+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:11.052213+0000 UTC [INFO] pydataquery: Received API response in 1.220827 seconds with response code 200
2025-09-30 15:59:11.062893+0000 UTC [INFO] pydataquery: Sending 7/19 API request
2025-09-30 15:59:11.062893+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BX78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BZ27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CA66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CC23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CE88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CF53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CH10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BW95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BY51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DX33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CF36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EB04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DT21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DV76%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:11.062893+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:16.800831+0000 UTC [INFO] pydataquery: Received API response in 5.504764 seconds with response code 200
2025-09-30 15:59:16.815520+0000 UTC [INFO] pydataquery: Sending 8/19 API request
2025-09-30 15:59:16.817874+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DZ80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DS48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DY16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DL94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DW59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2327851874%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EA21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DQ81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CX13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DL65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DP79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DR36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DS19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DZ51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EF88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EG61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EL56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BK01%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:16.819829+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:20.472970+0000 UTC [INFO] pydataquery: Received API response in 3.410653 seconds with response code 200
2025-09-30 15:59:20.481944+0000 UTC [INFO] pydataquery: Sending 9/19 API request
2025-09-30 15:59:20.482946+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BM66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EA91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BR53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CU73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DQ52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DT91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DX04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBG29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAC46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAE02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAU44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAF76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAY65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAH33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAM28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAK61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAT70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAR15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAV27%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:20.484943+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:24.114790+0000 UTC [INFO] pydataquery: Received API response in 3.404262 seconds with response code 200
2025-09-30 15:59:24.132786+0000 UTC [INFO] pydataquery: Sending 10/19 API request
2025-09-30 15:59:24.135605+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAZ31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAV05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAQ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBB32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBE70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBF46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAB62%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAD29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAG59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAL45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAS97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAX82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBA70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAN01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2280637039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAZ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:24.135898+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:29.828582+0000 UTC [INFO] pydataquery: Received API response in 5.462358 seconds with response code 200
2025-09-30 15:59:29.841714+0000 UTC [INFO] pydataquery: Sending 11/19 API request
2025-09-30 15:59:29.843735+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DE95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BU55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DA73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DF60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DP43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DU38%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:29.844338+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:31.359656+0000 UTC [INFO] pydataquery: Received API response in 1.283334 seconds with response code 200
2025-09-30 15:59:31.368472+0000 UTC [INFO] pydataquery: Sending 12/19 API request
2025-09-30 15:59:31.369994+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EB48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DS81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DT64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EC21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DQ26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DW93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DR09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BA15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BC70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BB97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BE37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DB31%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:31.371036+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:36.879746+0000 UTC [INFO] pydataquery: Received API response in 5.276811 seconds with response code 200
2025-09-30 15:59:36.885749+0000 UTC [INFO] pydataquery: Sending 13/19 API request
2025-09-30 15:59:36.887529+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSM88269US88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DF45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CP36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CQ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DH01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CT57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CY43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DJ66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DA57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DC14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DL13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DG28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DD96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AT75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DK30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DN78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AY60%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:36.888539+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:38.183356+0000 UTC [INFO] pydataquery: Received API response in 1.161337 seconds with response code 200
2025-09-30 15:59:38.187362+0000 UTC [INFO] pydataquery: Sending 14/19 API request
2025-09-30 15:59:38.188361+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BB58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BG46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BJ84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBK21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBV85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECB13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECF27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECR64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECH82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECJ49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EAY34%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBY25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECE51%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:38.189361+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:39.514853+0000 UTC [INFO] pydataquery: Received API response in 1.190694 seconds with response code 200
2025-09-30 15:59:39.522593+0000 UTC [INFO] pydataquery: Sending 15/19 API request
2025-09-30 15:59:39.525551+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECG00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EE43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ER27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EQ44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EP60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ES00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFB94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFC77%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBB53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBF67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBE92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBC37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBD10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FD94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FC12%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BF02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2917537875%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DQ00%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:39.526761+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:40.620601+0000 UTC [INFO] pydataquery: Received API response in 0.964513 seconds with response code 200
2025-09-30 15:59:40.634501+0000 UTC [INFO] pydataquery: Sending 16/19 API request
2025-09-30 15:59:40.637908+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS60367QAC78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS16955EAC49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CB07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BM70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BY19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BJ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BU96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BW52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BR67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AX45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AZ92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AT33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CQ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CR58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DG84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DJ24%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:40.638027+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:46.278092+0000 UTC [INFO] pydataquery: Received API response in 5.3879 seconds with response code 200
2025-09-30 15:59:46.304422+0000 UTC [INFO] pydataquery: Sending 17/19 API request
2025-09-30 15:59:46.304422+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CN45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DX18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DK96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CE46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DN36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DU78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DR40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DZ65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DV51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DW35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CJ33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780EA06%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DS23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2G83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2J23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2A14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2D52%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:46.311801+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:47.356733+0000 UTC [INFO] pydataquery: Received API response in 0.981056 seconds with response code 200
2025-09-30 15:59:47.369906+0000 UTC [INFO] pydataquery: Sending 18/19 API request
2025-09-30 15:59:47.369906+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05674RAJ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2L78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2K95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2C79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS50064FAS39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAV17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAQ22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAT60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAH23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBF57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBD00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBG31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBA60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBK43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBL26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAS25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAE39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CK14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CN52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CJ41%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:47.369906+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:48.883340+0000 UTC [INFO] pydataquery: Received API response in 1.244488 seconds with response code 200
2025-09-30 15:59:48.893053+0000 UTC [INFO] pydataquery: Sending 19/19 API request
2025-09-30 15:59:48.893970+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CR66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DC88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BW60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CW51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DG92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DA23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CT23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BD89%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BG11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BB24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286AY36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PBD24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PTP35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PUJ55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PAE16%2CStatMidPrice%29&start-date=20240929&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 15:59:48.893970+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 17:58:49+0000 UTC
2025-09-30 15:59:49.859811+0000 UTC [INFO] pydataquery: Received API response in 0.963009 seconds with response code 200
2025-09-30 15:59:49.871241+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 15:59:49.874499+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 15:59:50.153962+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 15:59:50.626817+0000 UTC [INFO] pydataquery: Retrieved data successfully for 375 expression(s)
2025-09-30 15:59:50.626817+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 15:59:50.640200+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 15:59:50.646625+0000 UTC [INFO] pydataquery: Pre-processing: converting 375 expression(s) of 365 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2024-09-29' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 17:29:57.461292+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 17:29:57.463310+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 17:29:57.463309+0000 UTC'
2025-09-30 17:29:57.464320+0000 UTC [DEBUG] pydataquery: Created a job of 375 expression(s)
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2025-05-03'. Date range: 149 day(s).
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2025-05-03' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 17:29:57.464320+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 375 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2025-05-03', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: Prepared 19 API requests for 375 expressions of 0 year(s) 149 day(s): start_date=20250503, end_date=20250929
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: Sending 1/19 API request
2025-09-30 17:29:57.464320+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214237807%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239506%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214238441%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239175%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HX11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HS26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HT09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HU71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HV54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HW38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910826996%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717011982%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384698994%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2445169985%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972511%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910827887%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948511949%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1566179039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384701020%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948512913%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:29:57.464320+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 17:29:58.309047+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.84 seconds. The token expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:29:58.309047+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:00.282084+0000 UTC [INFO] pydataquery: Received API response in 0.894841 seconds with response code 200
2025-09-30 17:30:00.282084+0000 UTC [INFO] pydataquery: Sending 2/19 API request
2025-09-30 17:30:00.287900+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717013095%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910828182%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384704800%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435840%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710543%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2764839945%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2354781614%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710626%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1318576086%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680288%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302419%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2446175577%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680528%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302500%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790104530%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1619155564%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2333676133%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790134362%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:00.289165+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:01.164987+0000 UTC [INFO] pydataquery: Received API response in 0.87424 seconds with response code 200
2025-09-30 17:30:01.166993+0000 UTC [INFO] pydataquery: Sending 3/19 API request
2025-09-30 17:30:01.168027+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012BX31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CF16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0146173371%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AN67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AR71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CA29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CC84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CH71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297220423%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903488572%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078736%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391394348%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775618439%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1504948776%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057061%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903489463%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297226545%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079842642%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176897754%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391395154%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:01.169027+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:03.081434+0000 UTC [INFO] pydataquery: Received API response in 1.844875 seconds with response code 200
2025-09-30 17:30:03.086349+0000 UTC [INFO] pydataquery: Sending 4/19 API request
2025-09-30 17:30:03.087358+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0505478684%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078496%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775617464%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057491%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176899701%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391398174%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079846635%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297221405%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDH20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBW15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCB68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDB59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCG55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCK67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCP54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDL32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDC33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDE98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71643VAB18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDP46%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:03.088694+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:05.748594+0000 UTC [INFO] pydataquery: Received API response in 2.602662 seconds with response code 200
2025-09-30 17:30:05.759970+0000 UTC [INFO] pydataquery: Sending 5/19 API request
2025-09-30 17:30:05.759970+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS706451BG56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QAZ54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBR20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCC42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCL41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDD16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDF63%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71656MAF68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAA54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAB38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSG2583XAB76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AL44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AJ97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AK60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319398%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1729875598%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2419405274%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319638%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322321964%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2965710598%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:05.759970+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:06.676570+0000 UTC [INFO] pydataquery: Received API response in 0.842997 seconds with response code 200
2025-09-30 17:30:06.680390+0000 UTC [INFO] pydataquery: Sending 6/19 API request
2025-09-30 17:30:06.680390+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2990500766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2989586941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS3010561762%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AB83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AD40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AH53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AG70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AJ10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSU1065PAA94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AE23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAS80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAY58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBH17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBK46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBL29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAQ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAS08%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAK54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBJ72%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAN93%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:06.680390+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:12.110119+0000 UTC [INFO] pydataquery: Received API response in 5.326353 seconds with response code 200
2025-09-30 17:30:12.115275+0000 UTC [INFO] pydataquery: Sending 7/19 API request
2025-09-30 17:30:12.115275+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BX78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BZ27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CA66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CC23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CE88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CF53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CH10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BW95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BY51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DX33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CF36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EB04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DT21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DV76%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:12.115275+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:17.433023+0000 UTC [INFO] pydataquery: Received API response in 5.250975 seconds with response code 200
2025-09-30 17:30:17.436034+0000 UTC [INFO] pydataquery: Sending 8/19 API request
2025-09-30 17:30:17.440356+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DZ80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DS48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DY16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DL94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DW59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2327851874%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EA21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DQ81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CX13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DL65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DP79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DR36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DS19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DZ51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EF88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EG61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EL56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BK01%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:17.441530+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:19.777544+0000 UTC [INFO] pydataquery: Received API response in 2.261268 seconds with response code 200
2025-09-30 17:30:19.795285+0000 UTC [INFO] pydataquery: Sending 9/19 API request
2025-09-30 17:30:19.795285+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BM66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EA91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BR53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CU73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DQ52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DT91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DX04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBG29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAC46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAE02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAU44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAF76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAY65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAH33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAM28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAK61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAT70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAR15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAV27%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:19.795285+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:20.896825+0000 UTC [INFO] pydataquery: Received API response in 1.096213 seconds with response code 200
2025-09-30 17:30:20.896825+0000 UTC [INFO] pydataquery: Sending 10/19 API request
2025-09-30 17:30:20.906864+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAZ31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAV05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAQ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBB32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBE70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBF46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAB62%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAD29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAG59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAL45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAS97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAX82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBA70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAN01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2280637039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAZ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:20.907512+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:26.532261+0000 UTC [INFO] pydataquery: Received API response in 5.563499 seconds with response code 200
2025-09-30 17:30:26.536265+0000 UTC [INFO] pydataquery: Sending 11/19 API request
2025-09-30 17:30:26.538268+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DE95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BU55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DA73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DF60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DP43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DU38%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:26.539263+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:30.167325+0000 UTC [INFO] pydataquery: Received API response in 3.510829 seconds with response code 200
2025-09-30 17:30:30.174571+0000 UTC [INFO] pydataquery: Sending 12/19 API request
2025-09-30 17:30:30.176041+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EB48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DS81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DT64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EC21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DQ26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DW93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DR09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BA15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BC70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BB97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BE37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DB31%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:30.176041+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:31.168912+0000 UTC [INFO] pydataquery: Received API response in 0.989438 seconds with response code 200
2025-09-30 17:30:31.170914+0000 UTC [INFO] pydataquery: Sending 13/19 API request
2025-09-30 17:30:31.171913+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSM88269US88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DF45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CP36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CQ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DH01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CT57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CY43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DJ66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DA57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DC14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DL13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DG28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DD96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AT75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DK30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DN78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AY60%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:31.172913+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:32.159011+0000 UTC [INFO] pydataquery: Received API response in 0.933282 seconds with response code 200
2025-09-30 17:30:32.169028+0000 UTC [INFO] pydataquery: Sending 14/19 API request
2025-09-30 17:30:32.174572+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BB58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BG46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BJ84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBK21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBV85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECB13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECF27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECR64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECH82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECJ49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EAY34%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBY25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECE51%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:32.176905+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:33.536153+0000 UTC [INFO] pydataquery: Received API response in 1.304376 seconds with response code 200
2025-09-30 17:30:33.553976+0000 UTC [INFO] pydataquery: Sending 15/19 API request
2025-09-30 17:30:33.553976+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECG00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EE43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ER27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EQ44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EP60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ES00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFB94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFC77%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBB53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBF67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBE92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBC37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBD10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FD94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FC12%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BF02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2917537875%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DQ00%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:33.553976+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:34.649164+0000 UTC [INFO] pydataquery: Received API response in 1.093283 seconds with response code 200
2025-09-30 17:30:34.649164+0000 UTC [INFO] pydataquery: Sending 16/19 API request
2025-09-30 17:30:34.649164+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS60367QAC78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS16955EAC49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CB07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BM70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BY19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BJ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BU96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BW52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BR67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AX45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AZ92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AT33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CQ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CR58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DG84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DJ24%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:34.649164+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:39.520173+0000 UTC [INFO] pydataquery: Received API response in 4.751373 seconds with response code 200
2025-09-30 17:30:39.520173+0000 UTC [INFO] pydataquery: Sending 17/19 API request
2025-09-30 17:30:39.535802+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CN45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DX18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DK96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CE46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DN36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DU78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DR40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DZ65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DV51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DW35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CJ33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780EA06%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DS23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2G83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2J23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2A14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2D52%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:39.535802+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:40.554609+0000 UTC [INFO] pydataquery: Received API response in 1.01737 seconds with response code 200
2025-09-30 17:30:40.554609+0000 UTC [INFO] pydataquery: Sending 18/19 API request
2025-09-30 17:30:40.554609+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05674RAJ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2L78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2K95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2C79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS50064FAS39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAV17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAQ22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAT60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAH23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBF57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBD00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBG31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBA60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBK43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBL26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAS25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAE39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CK14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CN52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CJ41%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:40.562714+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:41.838350+0000 UTC [INFO] pydataquery: Received API response in 1.273017 seconds with response code 200
2025-09-30 17:30:41.841356+0000 UTC [INFO] pydataquery: Sending 19/19 API request
2025-09-30 17:30:41.842356+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CR66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DC88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BW60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CW51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DG92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DA23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CT23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BD89%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BG11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BB24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286AY36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PBD24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PTP35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PUJ55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PAE16%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:30:41.843357+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:29:57+0000 UTC
2025-09-30 17:30:42.833323+0000 UTC [INFO] pydataquery: Received API response in 0.987253 seconds with response code 200
2025-09-30 17:30:42.833323+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 17:30:42.833323+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 17:30:43.068552+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 17:30:43.404801+0000 UTC [INFO] pydataquery: Retrieved data successfully for 375 expression(s)
2025-09-30 17:30:43.420505+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 17:30:43.420505+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 17:30:43.426010+0000 UTC [INFO] pydataquery: Pre-processing: converting 375 expression(s) of 149 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2025-05-03' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 17:33:28.057231+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 17:33:28.059252+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 17:33:28.059252+0000 UTC'
2025-09-30 17:33:28.062451+0000 UTC [DEBUG] pydataquery: Created a job of 375 expression(s)
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2025-05-03'. Date range: 149 day(s).
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2025-05-03' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 17:33:28.062451+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 375 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2025-05-03', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: Prepared 19 API requests for 375 expressions of 0 year(s) 149 day(s): start_date=20250503, end_date=20250929
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: Sending 1/19 API request
2025-09-30 17:33:28.062451+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214237807%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239506%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214238441%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2214239175%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HX11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HS26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HT09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HU71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HV54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS040114HW38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910826996%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717011982%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384698994%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2445169985%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972511%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910827887%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948511949%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1566179039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384701020%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2948512913%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:28.062451+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 17:33:29.004451+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.94 seconds. The token expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:29.004451+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:33.958497+0000 UTC [INFO] pydataquery: Received API response in 4.878158 seconds with response code 200
2025-09-30 17:33:33.958497+0000 UTC [INFO] pydataquery: Sending 2/19 API request
2025-09-30 17:33:33.974151+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1777972941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1717013095%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1910828182%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2384704800%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435840%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710543%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2764839945%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1843435766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2354781614%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1781710626%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1318576086%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680288%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302419%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2446175577%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1819680528%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2083302500%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790104530%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1619155564%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2333676133%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1790134362%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:33.974151+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:34.769892+0000 UTC [INFO] pydataquery: Received API response in 0.789755 seconds with response code 200
2025-09-30 17:33:34.776448+0000 UTC [INFO] pydataquery: Sending 3/19 API request
2025-09-30 17:33:34.776448+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012BX31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CF16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0146173371%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AN67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012AR71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CA29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CC84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP01012CH71%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297220423%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903488572%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078736%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391394348%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775618439%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1504948776%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057061%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1903489463%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297226545%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079842642%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176897754%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391395154%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:34.776448+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:36.011665+0000 UTC [INFO] pydataquery: Received API response in 1.162319 seconds with response code 200
2025-09-30 17:33:36.011665+0000 UTC [INFO] pydataquery: Sending 4/19 API request
2025-09-30 17:33:36.011665+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS0505478684%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1558078496%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1775617464%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1953057491%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2176899701%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2391398174%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2079846635%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2297221405%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDH20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBW15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCB68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDB59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCG55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCK67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCP54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDL32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDC33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDE98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71643VAB18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDP46%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:36.011665+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:41.394853+0000 UTC [INFO] pydataquery: Received API response in 5.28137 seconds with response code 200
2025-09-30 17:33:41.404872+0000 UTC [INFO] pydataquery: Sending 5/19 API request
2025-09-30 17:33:41.404872+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS706451BG56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QAZ54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QBR20%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCC42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QCL41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDD16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71654QDF63%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71656MAF68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAA54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP7808BAB38%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSG2583XAB76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AL44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AJ97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSL21779AK60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319398%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS1729875598%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2419405274%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322319638%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2322321964%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2965710598%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:41.404872+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:42.943291+0000 UTC [INFO] pydataquery: Received API response in 1.404498 seconds with response code 200
2025-09-30 17:33:42.943291+0000 UTC [INFO] pydataquery: Sending 6/19 API request
2025-09-30 17:33:42.953314+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2990500766%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2989586941%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS3010561762%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AB83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AD40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AH53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AG70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AJ10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSU1065PAA94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSN15516AE23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAS80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAY58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBH17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBK46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBL29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAQ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71645WAS08%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAK54%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NBJ72%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS71647NAN93%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:42.953314+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:48.765413+0000 UTC [INFO] pydataquery: Received API response in 5.707688 seconds with response code 200
2025-09-30 17:33:48.771364+0000 UTC [INFO] pydataquery: Sending 7/19 API request
2025-09-30 17:33:48.771364+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BX78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BZ27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CA66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CC23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CE88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CF53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CH10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BW95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756BY51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DX33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CF36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EB04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DT21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DV76%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:48.771364+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:49.909737+0000 UTC [INFO] pydataquery: Received API response in 1.131902 seconds with response code 200
2025-09-30 17:33:49.911978+0000 UTC [INFO] pydataquery: Sending 8/19 API request
2025-09-30 17:33:49.912998+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DZ80%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DS48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DY16%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863CE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DL94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DW59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2327851874%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EA21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DQ81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863DU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CX13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DL65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DP79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DR36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DS19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DZ51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EF88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EG61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EL56%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BK01%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:49.912998+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:51.737983+0000 UTC [INFO] pydataquery: Received API response in 1.695243 seconds with response code 200
2025-09-30 17:33:51.737983+0000 UTC [INFO] pydataquery: Sending 9/19 API request
2025-09-30 17:33:51.737983+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BM66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EA91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325BR53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325CU73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DQ52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DT91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325DX04%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBG29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAC46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAE02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAU44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAF76%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAY65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAH33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAM28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAK61%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAT70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAR15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAV27%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:51.737983+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:52.753605+0000 UTC [INFO] pydataquery: Received API response in 0.999022 seconds with response code 200
2025-09-30 17:33:52.753605+0000 UTC [INFO] pydataquery: Sending 10/19 API request
2025-09-30 17:33:52.763625+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAZ31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAV05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAQ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBB32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBE70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QBF46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAB62%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAD29%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAG59%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAL45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAS97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAX82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBA70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BAN01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2280637039%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91086QAZ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:52.763625+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:53.694228+0000 UTC [INFO] pydataquery: Received API response in 0.863473 seconds with response code 200
2025-09-30 17:33:53.694228+0000 UTC [INFO] pydataquery: Sending 11/19 API request
2025-09-30 17:33:53.707925+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DE95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BU55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DA73%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DF60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DP43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DU38%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:53.708919+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:33:59.301277+0000 UTC [INFO] pydataquery: Received API response in 5.464664 seconds with response code 200
2025-09-30 17:33:59.311286+0000 UTC [INFO] pydataquery: Sending 12/19 API request
2025-09-30 17:33:59.311286+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EB48%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DS81%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638BM30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DT64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638EC21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DQ26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DW93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638DR09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BA15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BC70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205AX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BB97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BE37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DB31%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:33:59.311286+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:00.364054+0000 UTC [INFO] pydataquery: Received API response in 1.05021 seconds with response code 200
2025-09-30 17:34:00.364054+0000 UTC [INFO] pydataquery: Sending 13/19 API request
2025-09-30 17:34:00.364054+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CJ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CK49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSM88269US88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DF45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CP36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CQ19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DH01%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CT57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CY43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DJ66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DA57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DC14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DL13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DG28%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DD96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AT75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DK30%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DN78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123AY60%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:00.379574+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:02.262531+0000 UTC [INFO] pydataquery: Received API response in 1.813598 seconds with response code 200
2025-09-30 17:34:02.265670+0000 UTC [INFO] pydataquery: Sending 14/19 API request
2025-09-30 17:34:02.267670+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BB58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BG46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123BJ84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CB40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CG37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBK21%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBV85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECB13%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECP09%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECF27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECR64%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECH82%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECN50%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECU93%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECJ49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EAY34%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBE60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579EBY25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECE51%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:02.267670+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:07.840071+0000 UTC [INFO] pydataquery: Received API response in 5.43744 seconds with response code 200
2025-09-30 17:34:07.843610+0000 UTC [INFO] pydataquery: Sending 15/19 API request
2025-09-30 17:34:07.848559+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP3579ECG00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CL22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS105756CM05%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS168863EE43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ER27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EQ44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325EP60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS195325ES00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFB94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS25714PFC77%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBB53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBF67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBE92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBC37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS91087BBD10%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FD94%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS715638FC12%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS836205BF02%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CXS2917537875%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS900123DQ00%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:07.849316+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:08.789583+0000 UTC [INFO] pydataquery: Received API response in 0.946998 seconds with response code 200
2025-09-30 17:34:08.789583+0000 UTC [INFO] pydataquery: Sending 16/19 API request
2025-09-30 17:34:08.789583+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS60367QAC78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS16955EAC49%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CB07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BM70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BY19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BJ42%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BU96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BW52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780BR67%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AX45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AZ92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780AT33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CV60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CY00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CQ75%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CR58%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CW44%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DG84%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CX27%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DJ24%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:08.789583+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:11.864705+0000 UTC [INFO] pydataquery: Received API response in 2.952498 seconds with response code 200
2025-09-30 17:34:11.875695+0000 UTC [INFO] pydataquery: Sending 17/19 API request
2025-09-30 17:34:11.876566+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CN45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CS32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DX18%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CT15%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DK96%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CE46%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CU87%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DN36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DU78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DR40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DZ65%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DV51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DW35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780CJ33%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780EA06%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS455780DS23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2G83%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2J23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2A14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2D52%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:11.877165+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:15.178423+0000 UTC [INFO] pydataquery: Received API response in 3.237199 seconds with response code 200
2025-09-30 17:34:15.186496+0000 UTC [INFO] pydataquery: Sending 18/19 API request
2025-09-30 17:34:15.189202+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05674RAJ32%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2L78%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2K95%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS05675M2C79%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS50064FAS39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAV17%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAQ22%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAT60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TAH23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBF57%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBD00%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBG31%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBA60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBK43%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS80413TBL26%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAS25%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS68205LAE39%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CK14%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CN52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CJ41%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:15.191655+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:20.020038+0000 UTC [INFO] pydataquery: Received API response in 4.628522 seconds with response code 200
2025-09-30 17:34:20.027123+0000 UTC [INFO] pydataquery: Sending 19/19 API request
2025-09-30 17:34:20.027123+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CR66%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DC88%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BW60%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CW51%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DG92%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286DA23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286CT23%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BD89%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BG11%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286BB24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS718286AY36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PBD24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PTP35%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74738PUJ55%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS74727PAE16%2CStatMidPrice%29&start-date=20250503&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 17:34:20.027123+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 19:33:28+0000 UTC
2025-09-30 17:34:20.951301+0000 UTC [INFO] pydataquery: Received API response in 0.91374 seconds with response code 200
2025-09-30 17:34:20.951301+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 17:34:20.951301+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 17:34:21.181196+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 17:34:21.542913+0000 UTC [INFO] pydataquery: Retrieved data successfully for 375 expression(s)
2025-09-30 17:34:21.542913+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 17:34:21.548096+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 17:34:21.554434+0000 UTC [INFO] pydataquery: Pre-processing: converting 375 expression(s) of 149 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2025-05-03' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 20:00:05.448433+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 20:00:05.450432+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 20:00:05.450432+0000 UTC'
2025-09-30 20:00:05.451862+0000 UTC [DEBUG] pydataquery: Created a job of 57 expression(s)
2025-09-30 20:00:05.451862+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04'
2025-09-30 20:00:05.451862+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 15.0 years.
2025-09-30 20:00:05.455186+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 20:00:05.455186+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 20:00:05.456393+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 57 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2010-10-04', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 20:00:05.456393+0000 UTC [INFO] pydataquery: Prepared 24 API requests for 57 expressions of 14 year(s) 364 day(s): start_date=20101004, end_date=20250929
2025-09-30 20:00:05.456393+0000 UTC [INFO] pydataquery: Sending 1/24 API request
2025-09-30 20:00:05.456393+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:05.456393+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 20:00:05.807400+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.34 seconds. The token expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:05.808407+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:07.071685+0000 UTC [INFO] pydataquery: Received API response in 1.133651 seconds with response code 200
2025-09-30 20:00:07.079793+0000 UTC [INFO] pydataquery: Sending 2/24 API request
2025-09-30 20:00:07.080682+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:07.081714+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:08.331169+0000 UTC [INFO] pydataquery: Received API response in 1.107378 seconds with response code 200
2025-09-30 20:00:08.340667+0000 UTC [INFO] pydataquery: Sending 3/24 API request
2025-09-30 20:00:08.341115+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:08.341115+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:10.112321+0000 UTC [INFO] pydataquery: Received API response in 1.579093 seconds with response code 200
2025-09-30 20:00:10.120948+0000 UTC [INFO] pydataquery: Sending 4/24 API request
2025-09-30 20:00:10.122395+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:10.123301+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:11.236861+0000 UTC [INFO] pydataquery: Received API response in 1.047592 seconds with response code 200
2025-09-30 20:00:11.240133+0000 UTC [INFO] pydataquery: Sending 5/24 API request
2025-09-30 20:00:11.240984+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:11.242142+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:13.984428+0000 UTC [INFO] pydataquery: Received API response in 2.574162 seconds with response code 200
2025-09-30 20:00:13.987428+0000 UTC [INFO] pydataquery: Sending 6/24 API request
2025-09-30 20:00:13.988428+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:13.989428+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:16.934140+0000 UTC [INFO] pydataquery: Received API response in 2.78812 seconds with response code 200
2025-09-30 20:00:16.947652+0000 UTC [INFO] pydataquery: Sending 7/24 API request
2025-09-30 20:00:16.948378+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:16.948378+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:17.790006+0000 UTC [INFO] pydataquery: Received API response in 0.780727 seconds with response code 200
2025-09-30 20:00:17.798243+0000 UTC [INFO] pydataquery: Sending 8/24 API request
2025-09-30 20:00:17.800524+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:17.800524+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:18.603689+0000 UTC [INFO] pydataquery: Received API response in 0.768643 seconds with response code 200
2025-09-30 20:00:18.603689+0000 UTC [INFO] pydataquery: Sending 9/24 API request
2025-09-30 20:00:18.603689+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:18.603689+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:19.763450+0000 UTC [INFO] pydataquery: Received API response in 1.061433 seconds with response code 200
2025-09-30 20:00:19.777881+0000 UTC [INFO] pydataquery: Sending 10/24 API request
2025-09-30 20:00:19.777881+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:19.777881+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:20.667645+0000 UTC [INFO] pydataquery: Received API response in 0.789245 seconds with response code 200
2025-09-30 20:00:20.669415+0000 UTC [INFO] pydataquery: Sending 11/24 API request
2025-09-30 20:00:20.669415+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:20.672105+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:22.656767+0000 UTC [INFO] pydataquery: Received API response in 1.791085 seconds with response code 200
2025-09-30 20:00:22.671300+0000 UTC [INFO] pydataquery: Sending 12/24 API request
2025-09-30 20:00:22.671300+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:22.671300+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:28.451128+0000 UTC [INFO] pydataquery: Received API response in 5.560185 seconds with response code 200
2025-09-30 20:00:28.466867+0000 UTC [INFO] pydataquery: Sending 13/24 API request
2025-09-30 20:00:28.466867+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:28.466867+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:29.640414+0000 UTC [INFO] pydataquery: Received API response in 1.101478 seconds with response code 200
2025-09-30 20:00:29.640414+0000 UTC [INFO] pydataquery: Sending 14/24 API request
2025-09-30 20:00:29.640414+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:29.640414+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:32.846494+0000 UTC [INFO] pydataquery: Received API response in 3.040139 seconds with response code 200
2025-09-30 20:00:32.846494+0000 UTC [INFO] pydataquery: Sending 15/24 API request
2025-09-30 20:00:32.859510+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:32.859510+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:33.710878+0000 UTC [INFO] pydataquery: Received API response in 0.787504 seconds with response code 200
2025-09-30 20:00:33.710878+0000 UTC [INFO] pydataquery: Sending 16/24 API request
2025-09-30 20:00:33.710878+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:33.710878+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:35.331184+0000 UTC [INFO] pydataquery: Received API response in 1.510258 seconds with response code 200
2025-09-30 20:00:35.331184+0000 UTC [INFO] pydataquery: Sending 17/24 API request
2025-09-30 20:00:35.334694+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:35.334694+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:38.317642+0000 UTC [INFO] pydataquery: Received API response in 2.782785 seconds with response code 200
2025-09-30 20:00:38.321148+0000 UTC [INFO] pydataquery: Sending 18/24 API request
2025-09-30 20:00:38.321148+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:38.321148+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:39.298392+0000 UTC [INFO] pydataquery: Received API response in 0.776965 seconds with response code 200
2025-09-30 20:00:39.301400+0000 UTC [INFO] pydataquery: Sending 19/24 API request
2025-09-30 20:00:39.302400+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:39.302400+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:41.807888+0000 UTC [INFO] pydataquery: Received API response in 2.307795 seconds with response code 200
2025-09-30 20:00:41.807888+0000 UTC [INFO] pydataquery: Sending 20/24 API request
2025-09-30 20:00:41.807888+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:41.807888+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:42.652752+0000 UTC [INFO] pydataquery: Received API response in 0.804469 seconds with response code 200
2025-09-30 20:00:42.656038+0000 UTC [INFO] pydataquery: Sending 21/24 API request
2025-09-30 20:00:42.657051+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:42.658038+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:43.727437+0000 UTC [INFO] pydataquery: Received API response in 1.010228 seconds with response code 200
2025-09-30 20:00:43.727437+0000 UTC [INFO] pydataquery: Sending 22/24 API request
2025-09-30 20:00:43.727437+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:43.727437+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:46.463030+0000 UTC [INFO] pydataquery: Received API response in 2.578491 seconds with response code 200
2025-09-30 20:00:46.463030+0000 UTC [INFO] pydataquery: Sending 23/24 API request
2025-09-30 20:00:46.463030+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:46.463030+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:47.353447+0000 UTC [INFO] pydataquery: Received API response in 0.772312 seconds with response code 200
2025-09-30 20:00:47.369093+0000 UTC [INFO] pydataquery: Sending 24/24 API request
2025-09-30 20:00:47.369093+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:00:47.369093+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:00:04+0000 UTC
2025-09-30 20:00:48.148099+0000 UTC [INFO] pydataquery: Received API response in 0.741127 seconds with response code 200
2025-09-30 20:00:48.148099+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 20:00:48.148099+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 20:00:48.654849+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 20:00:48.718118+0000 UTC [INFO] pydataquery: Retrieved data successfully for 57 expression(s)
2025-09-30 20:00:48.718118+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 20:00:48.728121+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 20:00:48.734555+0000 UTC [INFO] pydataquery: Pre-processing: converting 57 expression(s) of 5,474 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2010-10-04' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 20:03:54.850487+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 20:03:54.850487+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 20:03:54.850486+0000 UTC'
2025-09-30 20:03:54.850487+0000 UTC [DEBUG] pydataquery: Created a job of 57 expression(s)
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '1995-10-08'
2025-09-30 20:03:54.865491+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 30.0 years.
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '1995-10-08' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 20:03:54.865491+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 57 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='1995-10-08', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: Prepared 45 API requests for 57 expressions of 29 year(s) 364 day(s): start_date=19951008, end_date=20250929
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: Sending 1/45 API request
2025-09-30 20:03:54.865491+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:03:54.865491+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 20:03:55.362540+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.49 seconds. The token expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:03:55.362540+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:03:57.343685+0000 UTC [INFO] pydataquery: Received API response in 1.567651 seconds with response code 200
2025-09-30 20:03:57.354198+0000 UTC [INFO] pydataquery: Sending 2/45 API request
2025-09-30 20:03:57.354198+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:03:57.354198+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:03.241030+0000 UTC [INFO] pydataquery: Received API response in 5.476132 seconds with response code 200
2025-09-30 20:04:03.245502+0000 UTC [INFO] pydataquery: Sending 3/45 API request
2025-09-30 20:04:03.246510+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:03.247650+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:04.847791+0000 UTC [INFO] pydataquery: Received API response in 1.254677 seconds with response code 200
2025-09-30 20:04:04.855217+0000 UTC [INFO] pydataquery: Sending 4/45 API request
2025-09-30 20:04:04.856264+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:04.856264+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:10.538876+0000 UTC [INFO] pydataquery: Received API response in 5.403014 seconds with response code 200
2025-09-30 20:04:10.555937+0000 UTC [INFO] pydataquery: Sending 5/45 API request
2025-09-30 20:04:10.556821+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:10.556821+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:13.876201+0000 UTC [INFO] pydataquery: Received API response in 3.027679 seconds with response code 200
2025-09-30 20:04:13.877862+0000 UTC [INFO] pydataquery: Sending 6/45 API request
2025-09-30 20:04:13.877862+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:13.877862+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:17.127567+0000 UTC [INFO] pydataquery: Received API response in 2.959421 seconds with response code 200
2025-09-30 20:04:17.136351+0000 UTC [INFO] pydataquery: Sending 7/45 API request
2025-09-30 20:04:17.137539+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:17.138735+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:23.109872+0000 UTC [INFO] pydataquery: Received API response in 5.640424 seconds with response code 200
2025-09-30 20:04:23.111941+0000 UTC [INFO] pydataquery: Sending 8/45 API request
2025-09-30 20:04:23.112992+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20090930&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:23.113638+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:27.599041+0000 UTC [INFO] pydataquery: Received API response in 4.155168 seconds with response code 200
2025-09-30 20:04:27.608054+0000 UTC [INFO] pydataquery: Sending 9/45 API request
2025-09-30 20:04:27.608054+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20070930&end-date=20090929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:27.614058+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:31.332019+0000 UTC [INFO] pydataquery: Received API response in 3.387451 seconds with response code 200
2025-09-30 20:04:31.339298+0000 UTC [INFO] pydataquery: Sending 10/45 API request
2025-09-30 20:04:31.340350+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20050930&end-date=20070929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:31.340350+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:33.066335+0000 UTC [INFO] pydataquery: Received API response in 1.405333 seconds with response code 200
2025-09-30 20:04:33.082583+0000 UTC [INFO] pydataquery: Sending 11/45 API request
2025-09-30 20:04:33.083723+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20030930&end-date=20050929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:33.083723+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:38.504397+0000 UTC [INFO] pydataquery: Received API response in 5.158572 seconds with response code 200
2025-09-30 20:04:38.510412+0000 UTC [INFO] pydataquery: Sending 12/45 API request
2025-09-30 20:04:38.511388+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20010930&end-date=20030929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:38.511831+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:39.956306+0000 UTC [INFO] pydataquery: Received API response in 1.28887 seconds with response code 200
2025-09-30 20:04:39.970610+0000 UTC [INFO] pydataquery: Sending 13/45 API request
2025-09-30 20:04:39.971671+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=19990930&end-date=20010929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:39.971853+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:40.822394+0000 UTC [INFO] pydataquery: Received API response in 0.790376 seconds with response code 200
2025-09-30 20:04:40.835847+0000 UTC [INFO] pydataquery: Sending 14/45 API request
2025-09-30 20:04:40.836962+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=19970930&end-date=19990929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:40.837774+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:45.069366+0000 UTC [INFO] pydataquery: Received API response in 4.045863 seconds with response code 200
2025-09-30 20:04:45.072370+0000 UTC [INFO] pydataquery: Sending 15/45 API request
2025-09-30 20:04:45.072370+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=19951008&end-date=19970929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:45.073834+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:46.210169+0000 UTC [INFO] pydataquery: Received API response in 1.078199 seconds with response code 200
2025-09-30 20:04:46.220674+0000 UTC [INFO] pydataquery: Sending 16/45 API request
2025-09-30 20:04:46.220674+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:46.220674+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:48.473131+0000 UTC [INFO] pydataquery: Received API response in 2.027467 seconds with response code 200
2025-09-30 20:04:48.482758+0000 UTC [INFO] pydataquery: Sending 17/45 API request
2025-09-30 20:04:48.482758+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:48.482758+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:54.020293+0000 UTC [INFO] pydataquery: Received API response in 5.297945 seconds with response code 200
2025-09-30 20:04:54.025012+0000 UTC [INFO] pydataquery: Sending 18/45 API request
2025-09-30 20:04:54.026263+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:54.026263+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:54.908478+0000 UTC [INFO] pydataquery: Received API response in 0.815899 seconds with response code 200
2025-09-30 20:04:54.915302+0000 UTC [INFO] pydataquery: Sending 19/45 API request
2025-09-30 20:04:54.916358+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:54.917064+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:04:58.410038+0000 UTC [INFO] pydataquery: Received API response in 3.2873 seconds with response code 200
2025-09-30 20:04:58.411041+0000 UTC [INFO] pydataquery: Sending 20/45 API request
2025-09-30 20:04:58.411041+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:04:58.415796+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:01.129213+0000 UTC [INFO] pydataquery: Received API response in 2.548143 seconds with response code 200
2025-09-30 20:05:01.140615+0000 UTC [INFO] pydataquery: Sending 21/45 API request
2025-09-30 20:05:01.141615+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:01.142615+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:04.601171+0000 UTC [INFO] pydataquery: Received API response in 3.284085 seconds with response code 200
2025-09-30 20:05:04.798142+0000 UTC [INFO] pydataquery: Sending 22/45 API request
2025-09-30 20:05:04.798142+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:04.805716+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:07.266021+0000 UTC [INFO] pydataquery: Received API response in 2.290875 seconds with response code 200
2025-09-30 20:05:07.269021+0000 UTC [INFO] pydataquery: Sending 23/45 API request
2025-09-30 20:05:07.270016+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20090930&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:07.271012+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:12.800489+0000 UTC [INFO] pydataquery: Received API response in 5.225345 seconds with response code 200
2025-09-30 20:05:12.814085+0000 UTC [INFO] pydataquery: Sending 24/45 API request
2025-09-30 20:05:12.815637+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20070930&end-date=20090929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:12.816087+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:16.956405+0000 UTC [INFO] pydataquery: Received API response in 3.885355 seconds with response code 200
2025-09-30 20:05:16.971105+0000 UTC [INFO] pydataquery: Sending 25/45 API request
2025-09-30 20:05:16.971850+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20050930&end-date=20070929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:16.971850+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:19.621348+0000 UTC [INFO] pydataquery: Received API response in 2.382849 seconds with response code 200
2025-09-30 20:05:19.621348+0000 UTC [INFO] pydataquery: Sending 26/45 API request
2025-09-30 20:05:19.626262+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20030930&end-date=20050929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:19.627274+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:20.947407+0000 UTC [INFO] pydataquery: Received API response in 1.120739 seconds with response code 200
2025-09-30 20:05:20.949405+0000 UTC [INFO] pydataquery: Sending 27/45 API request
2025-09-30 20:05:20.950414+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20010930&end-date=20030929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:20.950414+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:23.846599+0000 UTC [INFO] pydataquery: Received API response in 2.637481 seconds with response code 200
2025-09-30 20:05:23.846599+0000 UTC [INFO] pydataquery: Sending 28/45 API request
2025-09-30 20:05:23.846599+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=19990930&end-date=20010929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:23.846599+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:28.764464+0000 UTC [INFO] pydataquery: Received API response in 4.642841 seconds with response code 200
2025-09-30 20:05:28.767923+0000 UTC [INFO] pydataquery: Sending 29/45 API request
2025-09-30 20:05:28.767923+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=19970930&end-date=19990929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:28.769046+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:33.543223+0000 UTC [INFO] pydataquery: Received API response in 4.608371 seconds with response code 200
2025-09-30 20:05:33.545222+0000 UTC [INFO] pydataquery: Sending 30/45 API request
2025-09-30 20:05:33.546277+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=19951008&end-date=19970929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:33.547280+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:36.019308+0000 UTC [INFO] pydataquery: Received API response in 2.315297 seconds with response code 200
2025-09-30 20:05:36.031533+0000 UTC [INFO] pydataquery: Sending 31/45 API request
2025-09-30 20:05:36.032535+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:36.033536+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:40.050907+0000 UTC [INFO] pydataquery: Received API response in 3.790102 seconds with response code 200
2025-09-30 20:05:40.062451+0000 UTC [INFO] pydataquery: Sending 32/45 API request
2025-09-30 20:05:40.063564+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:40.064259+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:44.017851+0000 UTC [INFO] pydataquery: Received API response in 3.792461 seconds with response code 200
2025-09-30 20:05:44.017851+0000 UTC [INFO] pydataquery: Sending 33/45 API request
2025-09-30 20:05:44.017851+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:44.027959+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:48.018545+0000 UTC [INFO] pydataquery: Received API response in 3.787011 seconds with response code 200
2025-09-30 20:05:48.029925+0000 UTC [INFO] pydataquery: Sending 34/45 API request
2025-09-30 20:05:48.031429+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:48.033238+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:51.991095+0000 UTC [INFO] pydataquery: Received API response in 3.78945 seconds with response code 200
2025-09-30 20:05:51.991095+0000 UTC [INFO] pydataquery: Sending 35/45 API request
2025-09-30 20:05:51.991095+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:51.996650+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:56.072727+0000 UTC [INFO] pydataquery: Received API response in 3.789151 seconds with response code 200
2025-09-30 20:05:56.072727+0000 UTC [INFO] pydataquery: Sending 36/45 API request
2025-09-30 20:05:56.072727+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:56.072727+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:05:59.755738+0000 UTC [INFO] pydataquery: Received API response in 3.387283 seconds with response code 200
2025-09-30 20:05:59.758738+0000 UTC [INFO] pydataquery: Sending 37/45 API request
2025-09-30 20:05:59.758738+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:05:59.759739+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:01.237570+0000 UTC [INFO] pydataquery: Received API response in 1.260614 seconds with response code 200
2025-09-30 20:06:01.240080+0000 UTC [INFO] pydataquery: Sending 38/45 API request
2025-09-30 20:06:01.241080+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20090930&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:01.241080+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:05.422795+0000 UTC [INFO] pydataquery: Received API response in 3.890305 seconds with response code 200
2025-09-30 20:06:05.422795+0000 UTC [INFO] pydataquery: Sending 39/45 API request
2025-09-30 20:06:05.422795+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20070930&end-date=20090929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:05.422795+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:08.612906+0000 UTC [INFO] pydataquery: Received API response in 2.88838 seconds with response code 200
2025-09-30 20:06:08.616863+0000 UTC [INFO] pydataquery: Sending 40/45 API request
2025-09-30 20:06:08.617501+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20050930&end-date=20070929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:08.617501+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:12.556547+0000 UTC [INFO] pydataquery: Received API response in 3.705321 seconds with response code 200
2025-09-30 20:06:12.563491+0000 UTC [INFO] pydataquery: Sending 41/45 API request
2025-09-30 20:06:12.563491+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20030930&end-date=20050929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:12.563491+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:14.187153+0000 UTC [INFO] pydataquery: Received API response in 1.39599 seconds with response code 200
2025-09-30 20:06:14.187153+0000 UTC [INFO] pydataquery: Sending 42/45 API request
2025-09-30 20:06:14.187153+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=20010930&end-date=20030929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:14.201658+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:15.075985+0000 UTC [INFO] pydataquery: Received API response in 0.84582 seconds with response code 200
2025-09-30 20:06:15.075985+0000 UTC [INFO] pydataquery: Sending 43/45 API request
2025-09-30 20:06:15.075985+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=19990930&end-date=20010929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:15.075985+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:18.981612+0000 UTC [INFO] pydataquery: Received API response in 3.770594 seconds with response code 200
2025-09-30 20:06:18.993120+0000 UTC [INFO] pydataquery: Sending 44/45 API request
2025-09-30 20:06:18.993120+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=19970930&end-date=19990929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:18.993120+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:23.454991+0000 UTC [INFO] pydataquery: Received API response in 4.32807 seconds with response code 200
2025-09-30 20:06:23.454991+0000 UTC [INFO] pydataquery: Sending 45/45 API request
2025-09-30 20:06:23.468005+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&start-date=19951008&end-date=19970929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:06:23.469485+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:03:54+0000 UTC
2025-09-30 20:06:27.315000+0000 UTC [INFO] pydataquery: Received API response in 3.709646 seconds with response code 200
2025-09-30 20:06:27.324000+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 20:06:27.324999+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 20:06:28.186566+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 20:06:28.261097+0000 UTC [INFO] pydataquery: Retrieved data successfully for 57 expression(s)
2025-09-30 20:06:28.263088+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 20:06:28.266110+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 20:06:28.285428+0000 UTC [INFO] pydataquery: Pre-processing: converting 57 expression(s) of 10,949 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='1995-10-08' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 20:19:57.356713+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 20:19:57.356713+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 20:19:57.356713+0000 UTC'
2025-09-30 20:19:57.356713+0000 UTC [DEBUG] pydataquery: Created a job of 67 expression(s)
2025-09-30 20:19:57.356713+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '1995-10-08'
2025-09-30 20:19:57.356713+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 30.0 years.
2025-09-30 20:19:57.356713+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '1995-10-08' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 20:19:57.372348+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 20:19:57.372348+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 67 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='1995-10-08', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 20:19:57.372348+0000 UTC [INFO] pydataquery: Prepared 60 API requests for 67 expressions of 29 year(s) 364 day(s): start_date=19951008, end_date=20250929
2025-09-30 20:19:57.372348+0000 UTC [INFO] pydataquery: Sending 1/60 API request
2025-09-30 20:19:57.385363+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:19:57.385994+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 20:19:58.215780+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.83 seconds. The token expires_at=2025-09-30 22:19:57+0000 UTC
2025-09-30 20:19:58.216779+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:19:57+0000 UTC
2025-09-30 20:20:00.628972+0000 UTC [INFO] pydataquery: Received API response in 1.949711 seconds with response code 200
2025-09-30 20:20:00.633736+0000 UTC [INFO] pydataquery: Sending 2/60 API request
2025-09-30 20:20:00.633736+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:00.635515+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:19:57+0000 UTC
2025-09-30 20:20:03.355245+0000 UTC [INFO] pydataquery: Received API response in 2.32596 seconds with response code 200
2025-09-30 20:20:03.355245+0000 UTC [INFO] pydataquery: Sending 3/60 API request
2025-09-30 20:20:03.370885+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:03.370885+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:19:57+0000 UTC
2025-09-30 20:20:35.554187+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 20:20:35.555317+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 20:20:35.555317+0000 UTC'
2025-09-30 20:20:35.558435+0000 UTC [DEBUG] pydataquery: Created a job of 67 expression(s)
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04'
2025-09-30 20:20:35.558435+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 15.0 years.
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 20:20:35.558435+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 67 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2010-10-04', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: Prepared 32 API requests for 67 expressions of 14 year(s) 364 day(s): start_date=20101004, end_date=20250929
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: Sending 1/32 API request
2025-09-30 20:20:35.558435+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:35.558435+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 20:20:35.890349+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.33 seconds. The token expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:35.890349+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:38.875240+0000 UTC [INFO] pydataquery: Received API response in 2.566098 seconds with response code 200
2025-09-30 20:20:38.879196+0000 UTC [INFO] pydataquery: Sending 2/32 API request
2025-09-30 20:20:38.879196+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:38.880196+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:42.760290+0000 UTC [INFO] pydataquery: Received API response in 3.469946 seconds with response code 200
2025-09-30 20:20:42.766783+0000 UTC [INFO] pydataquery: Sending 3/32 API request
2025-09-30 20:20:42.767782+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:42.768783+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:45.227983+0000 UTC [INFO] pydataquery: Received API response in 2.169702 seconds with response code 200
2025-09-30 20:20:45.235168+0000 UTC [INFO] pydataquery: Sending 4/32 API request
2025-09-30 20:20:45.235168+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:45.236217+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:48.245713+0000 UTC [INFO] pydataquery: Received API response in 2.724079 seconds with response code 200
2025-09-30 20:20:48.258723+0000 UTC [INFO] pydataquery: Sending 5/32 API request
2025-09-30 20:20:48.261728+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:48.261728+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:51.370785+0000 UTC [INFO] pydataquery: Received API response in 2.82623 seconds with response code 200
2025-09-30 20:20:51.373793+0000 UTC [INFO] pydataquery: Sending 6/32 API request
2025-09-30 20:20:51.375786+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:51.375786+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:53.823942+0000 UTC [INFO] pydataquery: Received API response in 2.211316 seconds with response code 200
2025-09-30 20:20:53.827032+0000 UTC [INFO] pydataquery: Sending 7/32 API request
2025-09-30 20:20:53.828080+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:53.828080+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:54.970031+0000 UTC [INFO] pydataquery: Received API response in 1.024872 seconds with response code 200
2025-09-30 20:20:54.970031+0000 UTC [INFO] pydataquery: Sending 8/32 API request
2025-09-30 20:20:54.970031+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:54.970031+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:55.904590+0000 UTC [INFO] pydataquery: Received API response in 0.874573 seconds with response code 200
2025-09-30 20:20:55.904590+0000 UTC [INFO] pydataquery: Sending 9/32 API request
2025-09-30 20:20:55.904590+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:55.904590+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:20:59.965642+0000 UTC [INFO] pydataquery: Received API response in 3.707701 seconds with response code 200
2025-09-30 20:20:59.969644+0000 UTC [INFO] pydataquery: Sending 10/32 API request
2025-09-30 20:20:59.970642+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:20:59.970642+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:02.392702+0000 UTC [INFO] pydataquery: Received API response in 2.165276 seconds with response code 200
2025-09-30 20:21:02.399107+0000 UTC [INFO] pydataquery: Sending 11/32 API request
2025-09-30 20:21:02.400116+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:02.401115+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:06.628982+0000 UTC [INFO] pydataquery: Received API response in 4.061248 seconds with response code 200
2025-09-30 20:21:06.631982+0000 UTC [INFO] pydataquery: Sending 12/32 API request
2025-09-30 20:21:06.631982+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:06.633727+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:07.496405+0000 UTC [INFO] pydataquery: Received API response in 0.79602 seconds with response code 200
2025-09-30 20:21:07.512480+0000 UTC [INFO] pydataquery: Sending 13/32 API request
2025-09-30 20:21:07.512480+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:07.512480+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:12.976125+0000 UTC [INFO] pydataquery: Received API response in 5.292526 seconds with response code 200
2025-09-30 20:21:12.979912+0000 UTC [INFO] pydataquery: Sending 14/32 API request
2025-09-30 20:21:12.981910+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:12.981910+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:13.835712+0000 UTC [INFO] pydataquery: Received API response in 0.784734 seconds with response code 200
2025-09-30 20:21:13.838715+0000 UTC [INFO] pydataquery: Sending 15/32 API request
2025-09-30 20:21:13.839715+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:13.841111+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:19.318931+0000 UTC [INFO] pydataquery: Received API response in 5.310345 seconds with response code 200
2025-09-30 20:21:19.322569+0000 UTC [INFO] pydataquery: Sending 16/32 API request
2025-09-30 20:21:19.322569+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:19.323572+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:20.136030+0000 UTC [INFO] pydataquery: Received API response in 0.775586 seconds with response code 200
2025-09-30 20:21:20.136030+0000 UTC [INFO] pydataquery: Sending 17/32 API request
2025-09-30 20:21:20.136030+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:20.136030+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:21.695492+0000 UTC [INFO] pydataquery: Received API response in 1.325944 seconds with response code 200
2025-09-30 20:21:21.697584+0000 UTC [INFO] pydataquery: Sending 18/32 API request
2025-09-30 20:21:21.697584+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:21.697584+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:23.590146+0000 UTC [INFO] pydataquery: Received API response in 1.492442 seconds with response code 200
2025-09-30 20:21:23.590146+0000 UTC [INFO] pydataquery: Sending 19/32 API request
2025-09-30 20:21:23.590146+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:23.590146+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:27.167008+0000 UTC [INFO] pydataquery: Received API response in 3.166686 seconds with response code 200
2025-09-30 20:21:27.167008+0000 UTC [INFO] pydataquery: Sending 20/32 API request
2025-09-30 20:21:27.167008+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:27.167008+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:28.784526+0000 UTC [INFO] pydataquery: Received API response in 1.251897 seconds with response code 200
2025-09-30 20:21:28.787519+0000 UTC [INFO] pydataquery: Sending 21/32 API request
2025-09-30 20:21:28.787519+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:28.789024+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:31.541114+0000 UTC [INFO] pydataquery: Received API response in 2.408819 seconds with response code 200
2025-09-30 20:21:31.541114+0000 UTC [INFO] pydataquery: Sending 22/32 API request
2025-09-30 20:21:31.541114+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:31.541114+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:33.726399+0000 UTC [INFO] pydataquery: Received API response in 1.831596 seconds with response code 200
2025-09-30 20:21:33.731079+0000 UTC [INFO] pydataquery: Sending 23/32 API request
2025-09-30 20:21:33.732247+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:33.732958+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:35.008032+0000 UTC [INFO] pydataquery: Received API response in 1.158563 seconds with response code 200
2025-09-30 20:21:35.012899+0000 UTC [INFO] pydataquery: Sending 24/32 API request
2025-09-30 20:21:35.014142+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:35.014368+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:38.700292+0000 UTC [INFO] pydataquery: Received API response in 3.454262 seconds with response code 200
2025-09-30 20:21:38.706381+0000 UTC [INFO] pydataquery: Sending 25/32 API request
2025-09-30 20:21:38.706381+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:38.706381+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:41.245082+0000 UTC [INFO] pydataquery: Received API response in 2.416431 seconds with response code 200
2025-09-30 20:21:41.247055+0000 UTC [INFO] pydataquery: Sending 26/32 API request
2025-09-30 20:21:41.248085+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:41.249054+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:44.277406+0000 UTC [INFO] pydataquery: Received API response in 2.912858 seconds with response code 200
2025-09-30 20:21:44.279422+0000 UTC [INFO] pydataquery: Sending 27/32 API request
2025-09-30 20:21:44.280422+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:44.280422+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:46.860302+0000 UTC [INFO] pydataquery: Received API response in 2.406144 seconds with response code 200
2025-09-30 20:21:46.861383+0000 UTC [INFO] pydataquery: Sending 28/32 API request
2025-09-30 20:21:46.861383+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:46.861383+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:49.898655+0000 UTC [INFO] pydataquery: Received API response in 2.861155 seconds with response code 200
2025-09-30 20:21:49.898655+0000 UTC [INFO] pydataquery: Sending 29/32 API request
2025-09-30 20:21:49.898655+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:49.898655+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:52.920637+0000 UTC [INFO] pydataquery: Received API response in 2.844625 seconds with response code 200
2025-09-30 20:21:52.920637+0000 UTC [INFO] pydataquery: Sending 30/32 API request
2025-09-30 20:21:52.920637+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:52.920637+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:55.698618+0000 UTC [INFO] pydataquery: Received API response in 2.605103 seconds with response code 200
2025-09-30 20:21:55.698618+0000 UTC [INFO] pydataquery: Sending 31/32 API request
2025-09-30 20:21:55.698618+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:55.698618+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:21:58.843030+0000 UTC [INFO] pydataquery: Received API response in 3.015792 seconds with response code 200
2025-09-30 20:21:58.843030+0000 UTC [INFO] pydataquery: Sending 32/32 API request
2025-09-30 20:21:58.843030+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:21:58.849536+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:20:34+0000 UTC
2025-09-30 20:22:01.051132+0000 UTC [INFO] pydataquery: Received API response in 2.088071 seconds with response code 200
2025-09-30 20:22:01.051132+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 20:22:01.051132+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 20:22:01.559244+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 20:22:01.622779+0000 UTC [INFO] pydataquery: Retrieved data successfully for 67 expression(s)
2025-09-30 20:22:01.622779+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 20:22:01.638422+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 20:22:01.638422+0000 UTC [INFO] pydataquery: Pre-processing: converting 67 expression(s) of 5,474 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2010-10-04' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
2025-09-30 20:26:41.862197+0000 UTC [INFO] pydataquery: DataQuery initialized with client_id='jbAIMF2Tkp0JO3sc'
2025-09-30 20:26:41.876016+0000 UTC [INFO] pydataquery: Set preferred_timezone='UTC'. current_time='2025-09-30 20:26:41.876015+0000 UTC'
2025-09-30 20:26:41.877947+0000 UTC [DEBUG] pydataquery: Created a job of 144 expression(s)
2025-09-30 20:26:41.879873+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04'
2025-09-30 20:26:41.880877+0000 UTC [WARNING] pydataquery: Potential long process time due to date range exceeding two years: 15.0 years.
2025-09-30 20:26:41.880877+0000 UTC [INFO] pydataquery: DataQuery default attribute `start_date` set to '2010-10-04' (client_id='jbAIMF2Tkp0JO3sc')
2025-09-30 20:26:41.881877+0000 UTC [INFO] pydataquery: Execution started
2025-09-30 20:26:41.882876+0000 UTC [DEBUG] pydataquery: Preparing for API request(s) for 144 expression(s). Parameters: filter_value='expression_has_null_value_only', expressions_per_request=20, start_date='2010-10-04', end_date='TODAY', data='ALL', nan_treatment='NA_NOTHING', frequency='FREQ_DAY', calendar='CAL_WEEKDAYS'
2025-09-30 20:26:41.883737+0000 UTC [INFO] pydataquery: Prepared 64 API requests for 144 expressions of 14 year(s) 364 day(s): start_date=20101004, end_date=20250929
2025-09-30 20:26:41.884740+0000 UTC [INFO] pydataquery: Sending 1/64 API request
2025-09-30 20:26:41.885741+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:26:41.886740+0000 UTC [INFO] pydataquery: Generating a new OAuth access token for client_id=jbAIMF2Tkp0JO3sc
2025-09-30 20:26:42.321510+0000 UTC [INFO] pydataquery: Generated an OAuth access token for client_id=jbAIMF2Tkp0JO3sc in 0.43 seconds. The token expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:26:42.321510+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:26:43.468016+0000 UTC [INFO] pydataquery: Received API response in 0.945054 seconds with response code 200
2025-09-30 20:26:43.476073+0000 UTC [INFO] pydataquery: Sending 2/64 API request
2025-09-30 20:26:43.477204+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:26:43.478208+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:26:47.016566+0000 UTC [INFO] pydataquery: Received API response in 3.151916 seconds with response code 200
2025-09-30 20:26:47.033866+0000 UTC [INFO] pydataquery: Sending 3/64 API request
2025-09-30 20:26:47.033866+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:26:47.033866+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:26:53.142929+0000 UTC [INFO] pydataquery: Received API response in 5.648992 seconds with response code 200
2025-09-30 20:26:53.158286+0000 UTC [INFO] pydataquery: Sending 4/64 API request
2025-09-30 20:26:53.158286+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:26:53.158286+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:26:55.887844+0000 UTC [INFO] pydataquery: Received API response in 2.386446 seconds with response code 200
2025-09-30 20:26:55.894366+0000 UTC [INFO] pydataquery: Sending 5/64 API request
2025-09-30 20:26:55.895365+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:26:55.896364+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:01.849946+0000 UTC [INFO] pydataquery: Received API response in 5.633497 seconds with response code 200
2025-09-30 20:27:01.863942+0000 UTC [INFO] pydataquery: Sending 6/64 API request
2025-09-30 20:27:01.863942+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:01.863942+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:06.831757+0000 UTC [INFO] pydataquery: Received API response in 4.635208 seconds with response code 200
2025-09-30 20:27:06.831757+0000 UTC [INFO] pydataquery: Sending 7/64 API request
2025-09-30 20:27:06.831757+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:06.831757+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:08.032583+0000 UTC [INFO] pydataquery: Received API response in 1.105753 seconds with response code 200
2025-09-30 20:27:08.032583+0000 UTC [INFO] pydataquery: Sending 8/64 API request
2025-09-30 20:27:08.032583+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AN40%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BF03%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CStatCdsBasis%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:08.032583+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:09.657717+0000 UTC [INFO] pydataquery: Received API response in 1.523373 seconds with response code 200
2025-09-30 20:27:09.657717+0000 UTC [INFO] pydataquery: Sending 9/64 API request
2025-09-30 20:27:09.673414+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:09.673414+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:13.454659+0000 UTC [INFO] pydataquery: Received API response in 3.583105 seconds with response code 200
2025-09-30 20:27:13.470678+0000 UTC [INFO] pydataquery: Sending 10/64 API request
2025-09-30 20:27:13.470678+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:13.470678+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:15.235635+0000 UTC [INFO] pydataquery: Received API response in 1.57494 seconds with response code 200
2025-09-30 20:27:15.251736+0000 UTC [INFO] pydataquery: Sending 11/64 API request
2025-09-30 20:27:15.251736+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:15.251736+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:21.306793+0000 UTC [INFO] pydataquery: Received API response in 5.861883 seconds with response code 200
2025-09-30 20:27:21.315687+0000 UTC [INFO] pydataquery: Sending 12/64 API request
2025-09-30 20:27:21.315687+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:21.315687+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:26.403490+0000 UTC [INFO] pydataquery: Received API response in 4.762402 seconds with response code 200
2025-09-30 20:27:26.407244+0000 UTC [INFO] pydataquery: Sending 13/64 API request
2025-09-30 20:27:26.408694+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:26.408694+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:32.142766+0000 UTC [INFO] pydataquery: Received API response in 5.567598 seconds with response code 200
2025-09-30 20:27:32.150972+0000 UTC [INFO] pydataquery: Sending 14/64 API request
2025-09-30 20:27:32.152978+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:32.152978+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:38.208048+0000 UTC [INFO] pydataquery: Received API response in 5.816123 seconds with response code 200
2025-09-30 20:27:38.218091+0000 UTC [INFO] pydataquery: Sending 15/64 API request
2025-09-30 20:27:38.221052+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:38.222618+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:39.768414+0000 UTC [INFO] pydataquery: Received API response in 1.251236 seconds with response code 200
2025-09-30 20:27:39.768414+0000 UTC [INFO] pydataquery: Sending 16/64 API request
2025-09-30 20:27:39.782379+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BK97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BX19%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUSP90603AP97%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CAM_IDX_TOT%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:39.784296+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:40.844131+0000 UTC [INFO] pydataquery: Received API response in 1.008231 seconds with response code 200
2025-09-30 20:27:40.844131+0000 UTC [INFO] pydataquery: Sending 17/64 API request
2025-09-30 20:27:40.844131+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:40.844131+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:44.392053+0000 UTC [INFO] pydataquery: Received API response in 3.139361 seconds with response code 200
2025-09-30 20:27:44.406374+0000 UTC [INFO] pydataquery: Sending 18/64 API request
2025-09-30 20:27:44.406374+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:44.406374+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:50.246552+0000 UTC [INFO] pydataquery: Received API response in 5.416595 seconds with response code 200
2025-09-30 20:27:50.256042+0000 UTC [INFO] pydataquery: Sending 19/64 API request
2025-09-30 20:27:50.257034+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:50.257034+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:54.047877+0000 UTC [INFO] pydataquery: Received API response in 3.499373 seconds with response code 200
2025-09-30 20:27:54.057892+0000 UTC [INFO] pydataquery: Sending 20/64 API request
2025-09-30 20:27:54.063606+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:54.064618+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:27:55.232742+0000 UTC [INFO] pydataquery: Received API response in 1.048905 seconds with response code 200
2025-09-30 20:27:55.242143+0000 UTC [INFO] pydataquery: Sending 21/64 API request
2025-09-30 20:27:55.243137+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:27:55.244136+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:00.703647+0000 UTC [INFO] pydataquery: Received API response in 5.224706 seconds with response code 200
2025-09-30 20:28:00.705646+0000 UTC [INFO] pydataquery: Sending 22/64 API request
2025-09-30 20:28:00.706646+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:00.707751+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:05.781735+0000 UTC [INFO] pydataquery: Received API response in 4.782685 seconds with response code 200
2025-09-30 20:28:05.782075+0000 UTC [INFO] pydataquery: Sending 23/64 API request
2025-09-30 20:28:05.782075+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:05.782075+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:11.248818+0000 UTC [INFO] pydataquery: Received API response in 5.166504 seconds with response code 200
2025-09-30 20:28:11.266182+0000 UTC [INFO] pydataquery: Sending 24/64 API request
2025-09-30 20:28:11.268692+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BN37%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BR41%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BT07%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatMidPrice%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:11.268692+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:13.193892+0000 UTC [INFO] pydataquery: Received API response in 1.750188 seconds with response code 200
2025-09-30 20:28:13.193892+0000 UTC [INFO] pydataquery: Sending 25/64 API request
2025-09-30 20:28:13.193892+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:13.193892+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:18.694451+0000 UTC [INFO] pydataquery: Received API response in 5.082291 seconds with response code 200
2025-09-30 20:28:18.706490+0000 UTC [INFO] pydataquery: Sending 26/64 API request
2025-09-30 20:28:18.707485+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:18.708482+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:24.514167+0000 UTC [INFO] pydataquery: Received API response in 5.614819 seconds with response code 200
2025-09-30 20:28:24.514167+0000 UTC [INFO] pydataquery: Sending 27/64 API request
2025-09-30 20:28:24.530854+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:24.531861+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:26.220942+0000 UTC [INFO] pydataquery: Received API response in 1.495874 seconds with response code 200
2025-09-30 20:28:26.220942+0000 UTC [INFO] pydataquery: Sending 28/64 API request
2025-09-30 20:28:26.220942+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:26.220942+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:32.420719+0000 UTC [INFO] pydataquery: Received API response in 6.024983 seconds with response code 200
2025-09-30 20:28:32.435928+0000 UTC [INFO] pydataquery: Sending 29/64 API request
2025-09-30 20:28:32.438024+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:32.438024+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:34.623410+0000 UTC [INFO] pydataquery: Received API response in 2.027541 seconds with response code 200
2025-09-30 20:28:34.640010+0000 UTC [INFO] pydataquery: Sending 30/64 API request
2025-09-30 20:28:34.640517+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:34.640517+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:40.853847+0000 UTC [INFO] pydataquery: Received API response in 6.041901 seconds with response code 200
2025-09-30 20:28:40.859400+0000 UTC [INFO] pydataquery: Sending 31/64 API request
2025-09-30 20:28:40.859400+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:40.859400+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:47.137360+0000 UTC [INFO] pydataquery: Received API response in 6.095335 seconds with response code 200
2025-09-30 20:28:47.140366+0000 UTC [INFO] pydataquery: Sending 32/64 API request
2025-09-30 20:28:47.142363+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299AW45%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BW36%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BY91%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsPESpreadBid%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:47.142363+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:48.185977+0000 UTC [INFO] pydataquery: Received API response in 1.019596 seconds with response code 200
2025-09-30 20:28:48.185977+0000 UTC [INFO] pydataquery: Sending 33/64 API request
2025-09-30 20:28:48.201772+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:48.203411+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:49.374330+0000 UTC [INFO] pydataquery: Received API response in 1.039738 seconds with response code 200
2025-09-30 20:28:49.374330+0000 UTC [INFO] pydataquery: Sending 34/64 API request
2025-09-30 20:28:49.374330+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:49.374330+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:54.907387+0000 UTC [INFO] pydataquery: Received API response in 5.293793 seconds with response code 200
2025-09-30 20:28:54.923037+0000 UTC [INFO] pydataquery: Sending 35/64 API request
2025-09-30 20:28:54.923037+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:54.923037+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:57.718354+0000 UTC [INFO] pydataquery: Received API response in 2.542873 seconds with response code 200
2025-09-30 20:28:57.733371+0000 UTC [INFO] pydataquery: Sending 36/64 API request
2025-09-30 20:28:57.733371+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:57.748098+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:28:59.950821+0000 UTC [INFO] pydataquery: Received API response in 2.022282 seconds with response code 200
2025-09-30 20:28:59.967366+0000 UTC [INFO] pydataquery: Sending 37/64 API request
2025-09-30 20:28:59.967366+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:28:59.967366+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:03.713696+0000 UTC [INFO] pydataquery: Received API response in 3.537498 seconds with response code 200
2025-09-30 20:29:03.718800+0000 UTC [INFO] pydataquery: Sending 38/64 API request
2025-09-30 20:29:03.719798+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:03.720798+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:09.844465+0000 UTC [INFO] pydataquery: Received API response in 5.833133 seconds with response code 200
2025-09-30 20:29:09.860120+0000 UTC [INFO] pydataquery: Sending 39/64 API request
2025-09-30 20:29:09.860120+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:09.860120+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:12.325517+0000 UTC [INFO] pydataquery: Received API response in 2.220733 seconds with response code 200
2025-09-30 20:29:12.328521+0000 UTC [INFO] pydataquery: Sending 40/64 API request
2025-09-30 20:29:12.329523+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BG85%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BH68%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BB98%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadAsk%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:12.329523+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:17.252924+0000 UTC [INFO] pydataquery: Received API response in 4.806383 seconds with response code 200
2025-09-30 20:29:17.257936+0000 UTC [INFO] pydataquery: Sending 41/64 API request
2025-09-30 20:29:17.259934+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:17.260932+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:18.562868+0000 UTC [INFO] pydataquery: Received API response in 1.130505 seconds with response code 200
2025-09-30 20:29:18.570364+0000 UTC [INFO] pydataquery: Sending 42/64 API request
2025-09-30 20:29:18.570364+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:18.570364+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:21.248708+0000 UTC [INFO] pydataquery: Received API response in 2.220756 seconds with response code 200
2025-09-30 20:29:21.264349+0000 UTC [INFO] pydataquery: Sending 43/64 API request
2025-09-30 20:29:21.264349+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:21.264349+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:24.565149+0000 UTC [INFO] pydataquery: Received API response in 2.902391 seconds with response code 200
2025-09-30 20:29:24.565149+0000 UTC [INFO] pydataquery: Sending 44/64 API request
2025-09-30 20:29:24.580777+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:24.580777+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:29.495870+0000 UTC [INFO] pydataquery: Received API response in 4.641871 seconds with response code 200
2025-09-30 20:29:29.505867+0000 UTC [INFO] pydataquery: Sending 45/64 API request
2025-09-30 20:29:29.508935+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:29.511145+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:34.965526+0000 UTC [INFO] pydataquery: Received API response in 5.141007 seconds with response code 200
2025-09-30 20:29:34.968360+0000 UTC [INFO] pydataquery: Sending 46/64 API request
2025-09-30 20:29:34.969360+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:34.970360+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:40.626823+0000 UTC [INFO] pydataquery: Received API response in 5.401194 seconds with response code 200
2025-09-30 20:29:40.642883+0000 UTC [INFO] pydataquery: Sending 47/64 API request
2025-09-30 20:29:40.642883+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:40.642883+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:42.003389+0000 UTC [INFO] pydataquery: Received API response in 1.195681 seconds with response code 200
2025-09-30 20:29:42.003389+0000 UTC [INFO] pydataquery: Sending 48/64 API request
2025-09-30 20:29:42.003389+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BV52%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BM53%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatDurSprdEffWrst%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BL70%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatDurSprdEffWrst%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:42.003389+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:47.355609+0000 UTC [INFO] pydataquery: Received API response in 5.223549 seconds with response code 200
2025-09-30 20:29:47.358448+0000 UTC [INFO] pydataquery: Sending 49/64 API request
2025-09-30 20:29:47.359484+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:47.359675+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:54.172834+0000 UTC [INFO] pydataquery: Received API response in 6.578777 seconds with response code 200
2025-09-30 20:29:54.193896+0000 UTC [INFO] pydataquery: Sending 50/64 API request
2025-09-30 20:29:54.194785+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:54.194785+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:29:58.951789+0000 UTC [INFO] pydataquery: Received API response in 4.554514 seconds with response code 200
2025-09-30 20:29:58.951789+0000 UTC [INFO] pydataquery: Sending 51/64 API request
2025-09-30 20:29:58.961829+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:29:58.962939+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:06.516886+0000 UTC [INFO] pydataquery: Received API response in 7.345956 seconds with response code 200
2025-09-30 20:30:06.528747+0000 UTC [INFO] pydataquery: Sending 52/64 API request
2025-09-30 20:30:06.528747+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:06.528747+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:11.583354+0000 UTC [INFO] pydataquery: Received API response in 4.886558 seconds with response code 200
2025-09-30 20:30:11.592885+0000 UTC [INFO] pydataquery: Sending 53/64 API request
2025-09-30 20:30:11.592885+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:11.595104+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:17.076360+0000 UTC [INFO] pydataquery: Received API response in 5.253611 seconds with response code 200
2025-09-30 20:30:17.080564+0000 UTC [INFO] pydataquery: Sending 54/64 API request
2025-09-30 20:30:17.081564+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:17.081564+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:22.593277+0000 UTC [INFO] pydataquery: Received API response in 5.323893 seconds with response code 200
2025-09-30 20:30:22.610992+0000 UTC [INFO] pydataquery: Sending 55/64 API request
2025-09-30 20:30:22.613312+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:22.613312+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:32.721129+0000 UTC [INFO] pydataquery: Received API response in 9.915189 seconds with response code 200
2025-09-30 20:30:32.739200+0000 UTC [INFO] pydataquery: Sending 56/64 API request
2025-09-30 20:30:32.740855+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadAsk%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsPESpreadBid%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatMidPrice%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CAM_IDX_TOT%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CStatCdsBasis%29&expressions=DB%28SAGE%2CINSTRUMENT%2Cid_isin%2CUS698299BS24%2CCMStatCdsPESpreadAskIsrDistance%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FParSpread%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FDuration100%29&expressions=DB%28JPMR-EMCREDIT%2CCDS-Sovereign%2CPA%2FCDS%2FUSD%2F5y%2FUpfront100%29&expressions=DB%28FHR%2CN5%2CMIDPRC%29&expressions=DB%28FHR%2CN5%2CCOUPON%29&expressions=DB%28FHR%2CN7%2CMIDPRC%29&expressions=DB%28FHR%2CN7%2CCOUPON%29&expressions=DB%28FHR%2CN10%2CMIDPRC%29&expressions=DB%28FHR%2CN10%2CCOUPON%29&expressions=DB%28FHR%2CB20%2CMIDPRC%29&expressions=DB%28FHR%2CB20%2CCOUPON%29&expressions=DB%28FHR%2CB30%2CMIDPRC%29&expressions=DB%28FHR%2CB30%2CCOUPON%29&expressions=DB%28FHR%2CN5%2CMODDUR%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:32.741351+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:39.183014+0000 UTC [INFO] pydataquery: Received API response in 6.181689 seconds with response code 200
2025-09-30 20:30:39.193753+0000 UTC [INFO] pydataquery: Sending 57/64 API request
2025-09-30 20:30:39.196769+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20230930&end-date=20250929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:39.196769+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:42.737865+0000 UTC [INFO] pydataquery: Received API response in 3.410249 seconds with response code 200
2025-09-30 20:30:42.745487+0000 UTC [INFO] pydataquery: Sending 58/64 API request
2025-09-30 20:30:42.749063+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20210930&end-date=20230929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:42.750177+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:46.008290+0000 UTC [INFO] pydataquery: Received API response in 3.130026 seconds with response code 200
2025-09-30 20:30:46.018111+0000 UTC [INFO] pydataquery: Sending 59/64 API request
2025-09-30 20:30:46.019124+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20190930&end-date=20210929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:46.020121+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:49.529888+0000 UTC [INFO] pydataquery: Received API response in 3.322361 seconds with response code 200
2025-09-30 20:30:49.557655+0000 UTC [INFO] pydataquery: Sending 60/64 API request
2025-09-30 20:30:49.557655+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20170930&end-date=20190929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:49.557655+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:52.579894+0000 UTC [INFO] pydataquery: Received API response in 2.892233 seconds with response code 200
2025-09-30 20:30:52.579894+0000 UTC [INFO] pydataquery: Sending 61/64 API request
2025-09-30 20:30:52.595709+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20150930&end-date=20170929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:52.595709+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:55.608848+0000 UTC [INFO] pydataquery: Received API response in 2.828232 seconds with response code 200
2025-09-30 20:30:55.624329+0000 UTC [INFO] pydataquery: Sending 62/64 API request
2025-09-30 20:30:55.628878+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20130930&end-date=20150929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:55.628878+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:30:59.184484+0000 UTC [INFO] pydataquery: Received API response in 3.423906 seconds with response code 200
2025-09-30 20:30:59.184484+0000 UTC [INFO] pydataquery: Sending 63/64 API request
2025-09-30 20:30:59.194420+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20110930&end-date=20130929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:30:59.195449+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:31:02.463422+0000 UTC [INFO] pydataquery: Received API response in 3.071991 seconds with response code 200
2025-09-30 20:31:02.467434+0000 UTC [INFO] pydataquery: Sending 64/64 API request
2025-09-30 20:31:02.469728+0000 UTC [DEBUG] pydataquery: GET https://api-developer.jpmorgan.com/research/dataquery-authe/api/v2/expressions/time-series?expressions=DB%28FHR%2CN7%2CMODDUR%29&expressions=DB%28FHR%2CN10%2CMODDUR%29&expressions=DB%28FHR%2CB20%2CMODDUR%29&expressions=DB%28FHR%2CB30%2CMODDUR%29&start-date=20101004&end-date=20110929&data=ALL&calendar=CAL_WEEKDAYS&nan-treatment=NA_NOTHING&frequency=FREQ_DAY
2025-09-30 20:31:02.469728+0000 UTC [DEBUG] pydataquery: Reusing existing token for client_id=jbAIMF2Tkp0JO3sc which expires_at=2025-09-30 22:26:41+0000 UTC
2025-09-30 20:31:05.157642+0000 UTC [INFO] pydataquery: Received API response in 2.629778 seconds with response code 200
2025-09-30 20:31:05.157642+0000 UTC [INFO] pydataquery: Processing API responses... This may take a few seconds depending on the size of requests.
2025-09-30 20:31:05.174259+0000 UTC [DEBUG] pydataquery: Normalizing API response and storing results to the job
2025-09-30 20:31:06.128103+0000 UTC [DEBUG] pydataquery: Consolidating API responses by expressions
2025-09-30 20:31:06.307507+0000 UTC [INFO] pydataquery: Retrieved data successfully for 144 expression(s)
2025-09-30 20:31:06.309540+0000 UTC [DEBUG] pydataquery: Updating the job results
2025-09-30 20:31:06.312541+0000 UTC [INFO] pydataquery: Execution completed
2025-09-30 20:31:06.339816+0000 UTC [INFO] pydataquery: Pre-processing: converting 144 expression(s) of 5,474 day(s) values with filter_value='all' to a dataframe by date, ranging from start_date='2010-10-04' to end_date='TODAY'. This may take a while depending the size of expressions and date range.
